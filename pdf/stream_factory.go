package pdf

import (
	"container/list")

// StreamFactory is used to generate Streams with client-specified options.
// Options are set in the StreamFactory and all Streams generated by the factory
// will have those specified options.
type StreamFactory struct {
	// filterList is a list of StreamFilterFactory items to be
	// added to the stream using AddFilter() when it is
	// constructed.  The Stream implementation maintains its own
	// filterList comprising the items that have been added.  The
	// filterList in a Stream constructed by a StreamFactory
	// should match the one here.
	// It should contain only items of type StreamFilterFactory.
	filterList *list.List
}

func NewStreamFactory() *StreamFactory {
	return new(StreamFactory)
}

func (sf *StreamFactory) New() Stream {
	newStream := NewStream()
	if sf.filterList != nil {
		for item:=sf.filterList.Front(); item != nil; item = item.Next() {
			newStream.AddFilter(item.Value.(StreamFilterFactory))
		}
	}
	return newStream
}

func (sf *StreamFactory) AddFilter(sff StreamFilterFactory) {
	if sf.filterList == nil {
		sf.filterList = list.New()
	}
	sf.filterList.PushBack(sff)
}